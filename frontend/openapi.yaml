openapi: '3.1.0'
info:
  title: CRUD API for Django Models
  version: 1.0.0
paths:
  /searches/:
    get:
      summary: Retrieve all searches
      tags:
        - Searches
      operationId: listAllSearches
      responses:
        '200':
          description: A list of searches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Search'
    post:
      summary: Create a new search
      tags:
        - Searches
      operationId: createSearch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
      responses:
        '201':
          description: The created search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search'
  /searches/{search_id}/:
    get:
      summary: Retrieve a specific search
      tags:
        - Searches
      operationId: getSearchById
      parameters:
        - in: path
          name: search_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The requested search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search'
    put:
      summary: Update a specific search
      tags:
        - Searches
      operationId: updateSearch
      parameters:
        - in: path
          name: search_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
      responses:
        '200':
          description: The updated search
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search'
    delete:
      summary: Delete a specific search
      tags:
        - Searches
      operationId: deleteSearch
      parameters:
        - in: path
          name: search_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: The search has been deleted
  /users/:
    get:
      summary: Retrieve all users
      tags:
        - Users
      operationId: listAllUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - Users
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{user_id}/:
    get:
      summary: Retrieve a specific user
      tags:
        - Users
      operationId: getUserById
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The requested user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a specific user
      tags:
        - Users
      operationId: updateUser
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a specific user
      tags:
        - Users
      operationId: deleteUser
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: The user has been deleted
components:
  schemas:
    Search:
      type: object
      properties:
        id:
          type: integer
        sustainability_score:
          type: number
        destination_code:
          type: string
        timestamp_added:
          type: string
        origin_code:
          type: string
        arrival_date:
          type: string
        departure_date:
          type: string
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        id:
          type: integer
        last_name:
          type: string
        name:
          type: string
        password:
          type: string
        username:
          type: string
tags:
  - name: Searches
    description: Operations related to searches
  - name: Users
    description: Operations related to users
