openapi: "3.1.0"
info:
  title: Airline Search API
  description: CRUD operations for Airlines, Places, Searches, and Users
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
paths:
  /airlines:
    get:
      summary: Get all airlines
      responses:
        "200":
          description: A list of airlines
    post:
      summary: Add a new airline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Airline"
      responses:
        "201":
          description: Successfully created
        "400":
          description: Bad request
  /airlines/{airlineId}:
    get:
      summary: Get a specific airline
      parameters:
        - in: path
          name: airlineId
          required: true
          schema:
            type: integer
          description: ID of the airline
      responses:
        "200":
          description: A single airline
        "404":
          description: Airline not found
    put:
      summary: Update an existing airline
      parameters:
        - in: path
          name: airlineId
          required: true
          schema:
            type: integer
          description: ID of the airline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Airline"
      responses:
        "200":
          description: Successfully updated
        "400":
          description: Bad request
        "404":
          description: Airline not found
    delete:
      summary: Delete an existing airline
      parameters:
        - in: path
          name: airlineId
          required: true
          schema:
            type: integer
          description: ID of the airline
      responses:
        "204":
          description: Successfully deleted
        "404":
          description: Airline not found

  /places:
    get:
      summary: Get all places
      responses:
        "200":
          description: A list of places
    post:
      summary: Add a new place
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Place"
      responses:
        "201":
          description: Successfully created
        "400":
          description: Bad request
  /places/{placeId}:
    get:
      summary: Get a specific place
      parameters:
        - in: path
          name: placeId
          required: true
          schema:
            type: integer
          description: ID of the place
      responses:
        "200":
          description: A single place
        "404":
          description: Place not found
    put:
      summary: Update an existing place
      parameters:
        - in: path
          name: placeId
          required: true
          schema:
            type: integer
          description: ID of the place
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Place"
      responses:
        "200":
          description: Successfully updated
        "400":
          description: Bad request
        "404":
          description: Place not found
    delete:
      summary: Delete an existing place
      parameters:
        - in: path
          name: placeId
          required: true
          schema:
            type: integer
          description: ID of the place
      responses:
        "204":
          description: Successfully deleted
        "404":
          description: Place not found

  /searches:
    get:
      summary: Get all searches
      responses:
        "200":
          description: A list of searches
    post:
      summary: Add a new search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Search"
      responses:
        "201":
          description: Successfully created
        "400":
          description: Bad request
  /searches/{searchId}:
    get:
      summary: Get a specific search
      parameters:
        - in: path
          name: searchId
          required: true
          schema:
            type: integer
          description: ID of the search
      responses:
        "200":
          description: A single search
        "404":
          description: Search not found
    put:
      summary: Update an existing search
      parameters:
        - in: path
          name: searchId
          required: true
          schema:
            type: integer
          description: ID of the search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Search"
      responses:
        "200":
          description: Successfully updated
        "400":
          description: Bad request
        "404":
          description: Search not found
    delete:
      summary: Delete an existing search
      parameters:
        - in: path
          name: searchId
          required: true
          schema:
            type: integer
          description: ID of the search
      responses:
        "204":
          description: Successfully deleted
        "404":
          description: Search not found

  /users:
    get:
      summary: Get all users
      responses:
        "200":
          description: A list of users
    post:
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Successfully created
        "400":
          description: Bad request
  /users/{userId}:
    get:
      summary: Get a specific user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        "200":
          description: A single user
        "404":
          description: User not found
    put:
      summary: Update an existing user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID of the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successfully updated
        "400":
          description: Bad request
        "404":
          description: User not found
    delete:
      summary: Delete an existing user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: ID of the user
      responses:
        "204":
          description: Successfully deleted
        "404":
          description: User not found

components:
  schemas:
    Airline:
      type: object
      properties:
        airline_name:
          type: string
        id:
          type: integer
        sustainability_score:
          type: number
        description:
          type: string
    Place:
      type: object
      properties:
        city_name:
          type: string
        country_name:
          type: string
        id:
          type: integer
        description:
          type: string
    Search:
      type: object
      properties:
        id:
          type: integer
        sustainability_score:
          type: number
        airline_id:
          type: integer
        destination_id:
          type: integer
        flight_duration:
          type: string
        origin_id:
          type: integer
    User:
      type: object
      properties:
        user_id:
          type: integer
        email:
          type: string
        googleid:
          type: string
        id:
          type: integer
        last_name:
          type: string
        name:
          type: string
        password:
          type: string
        username:
          type: string
